name: Collect Owner Poll Reactions

on:
  schedule:
    - cron: "*/5 * * * *"  # Every 5 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  collect_owner_poll:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare folder
        run: mkdir -p .tmp owner-presence

      - name: Fetch latest owner poll message ID
        id: fetch_message
        run: |
          echo "Finding last owner poll message..."
          # Optional: store a fixed ID in a file if needed, otherwise skip
          echo "No .owner_poll_id needed in new flow"

      - name: Get reactions from last message with ✅
        run: |
          # Fetch latest 10 messages and find the most recent one with ✅
          RESPONSE=$(curl -s "https://discord.com/api/v10/channels/${{ secrets.DISCORD_OWNERS_CHANNEL_ID }}/messages?limit=10" \
            -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}")

          echo "$RESPONSE" > .tmp/recent_messages.json
          
          # Get the latest message ID (assuming last poll was the latest one with ✅ reaction)
          POLL_ID=$(jq -r '[.[] | select(.reactions[]?.emoji.name == "✅")][0].id' .tmp/recent_messages.json)

          if [ -z "$POLL_ID" ] || [ "$POLL_ID" == "null" ]; then
            echo "❌ No recent poll with ✅ reaction found."
            exit 0
          fi

          echo "$POLL_ID" > .tmp/owner_poll_id.txt
          echo "Using poll message ID: $POLL_ID"

          # Fetch users who reacted with ✅
          ENCODED=$(printf "✅" | jq -sRr @uri)
          USERS=$(curl -s "https://discord.com/api/v10/channels/${{ secrets.DISCORD_OWNERS_CHANNEL_ID }}/messages/${POLL_ID}/reactions/${ENCODED}?limit=100" \
            -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}")

          echo "$USERS" > .tmp/reacted_yes.json

      - name: Generate present_owners.json
        run: |
          NOW=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          TODAY=$(date -u +'%Y-%m-%d')

          jq -r '.[].username' .tmp/reacted_yes.json | sort -u > .tmp/reacted_usernames.txt

          echo "{" > present_owners.json
          echo "  \"date\": \"$TODAY\"," >> present_owners.json
          echo "  \"collectedAt\": \"$NOW\"," >> present_owners.json
          echo "  \"owners\": [" >> present_owners.json

          count=0
          while read -r DISCORD_USERNAME; do
            OWNER=$(jq -r --arg user "$DISCORD_USERNAME" '.[$user] // empty' .owners_map.json)
            if [ -n "$OWNER" ]; then
              [ "$count" -gt 0 ] && echo "," >> present_owners.json
              echo "    \"$OWNER\"" >> present_owners.json
              count=$((count + 1))
            fi
          done < .tmp/reacted_usernames.txt

          echo "  ]" >> present_owners.json
          echo "}" >> present_owners.json

          cp present_owners.json "owner-presence/${TODAY}.json"

      - name: Commit results
        run: |
          git config --global user.name "poll-bot"
          git config --global user.email "bot@example.com"

          git add present_owners.json owner-presence/*.json
          git commit -m "Update present game owners from poll"
          git push || echo "Nothing to push"
