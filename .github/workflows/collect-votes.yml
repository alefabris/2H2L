name: Collect Poll Votes

on:
  schedule:
    - cron: "*/5 * * * *"  # every 5 minutes
  workflow_dispatch:

jobs:
  collect_votes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Read poll message ID
        id: read_id
        run: echo "MESSAGE_ID=$(cat .poll_id)" >> "$GITHUB_ENV"

      - name: Get poll message from Discord
        run: |
          RESPONSE=$(curl -s -X GET "https://discord.com/api/v10/channels/${{ secrets.DISCORD_CHANNEL_ID }}/messages/${MESSAGE_ID}" \
            -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}")

          echo "$RESPONSE" > .poll_message.json

      - name: Generate results.json
        run: |
          GAMES=$(jq -r '.[]' games/index.json)
          EMOJIS=(ðŸ‡¦ ðŸ‡§ ðŸ‡¨ ðŸ‡© ðŸ‡ª ðŸ‡« ðŸ‡¬ ðŸ‡­ ðŸ‡® ðŸ‡¯ ðŸ‡° ðŸ‡± ðŸ‡² ðŸ‡³ ðŸ‡´ ðŸ‡µ ðŸ‡¶ ðŸ‡· ðŸ‡¸ ðŸ‡¹ ðŸ‡º ðŸ‡» ðŸ‡¼ ðŸ‡½ ðŸ‡¾ ðŸ‡¿)

          jq -r '.reactions[] | "\(.emoji.name) \(.count)"' .poll_message.json > .reaction_counts.txt

          echo "[" > results.json

          i=0
          while read -r GAME; do
            EMOJI="${EMOJIS[i]}"
            VOTES=$(grep "$EMOJI" .reaction_counts.txt | awk '{print $2}' || echo "0")
            if [ $i -gt 0 ]; then echo "," >> results.json; fi
            echo "  {\"game\": \"$GAME\", \"votes\": $((VOTES - 1))}" >> results.json
            i=$((i + 1))
          done <<< "$GAMES"

          echo "]" >> results.json

      - name: Commit results.json to repo
        run: |
          git config --global user.name "poll-bot"
          git config --global user.email "bot@example.com"
          git add results.json
          git commit -m "Update poll results"
          git push
