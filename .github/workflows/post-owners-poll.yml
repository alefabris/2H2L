name: Post Owners Poll

on:
  schedule:
    - cron: "0 8 * * *"  # 09:00 CET (08:00 UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  post_poll:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq and curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Check if today is 4 days before next event and poll not already posted
        id: check_event_day
        run: |
          NEXT_EVENT_DATE=$(jq -r '.date' events/upcoming.json)
          POLL_RECORD_FILE=".last_owners_poll"
          NEXT_EPOCH=$(date -d "$NEXT_EVENT_DATE" +%s)
          TODAY_EPOCH=$(date -u +%s)
          DIFF=$(( (NEXT_EPOCH - TODAY_EPOCH) / 86400 ))

          echo "ğŸ“… Days until next event: $DIFF"

          if [ "$DIFF" -ne 4 ]; then
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ -f "$POLL_RECORD_FILE" ] && grep -q "$NEXT_EVENT_DATE" "$POLL_RECORD_FILE"; then
            echo "Poll already posted for this date."
            echo "continue=false" >> $GITHUB_OUTPUT
          else
            echo "$NEXT_EVENT_DATE" > "$POLL_RECORD_FILE"
            echo "continue=true" >> $GITHUB_OUTPUT
          fi

      - name: Exit if not time to post
        if: steps.check_event_day.outputs.continue != 'true'
        run: exit 0

      - name: Delete previous messages from owners channel
        env:
          TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.DISCORD_OWNERS_CHANNEL_ID }}
        run: |
          MESSAGES=$(curl -s -H "Authorization: Bot $TOKEN" \
            "https://discord.com/api/v10/channels/$CHANNEL_ID/messages?limit=100")

          echo "$MESSAGES" | jq -r '.[].id' | while read -r ID; do
            curl -s -X DELETE "https://discord.com/api/v10/channels/$CHANNEL_ID/messages/$ID" \
              -H "Authorization: Bot $TOKEN"
            sleep 0.5
          done

      - name: Build and post availability poll
        run: |
          jq -r '.[]' games/owners.json > .owners.txt
          EMOJIS=(ğŸ‡¦ ğŸ‡§ ğŸ‡¨ ğŸ‡© ğŸ‡ª ğŸ‡« ğŸ‡¬ ğŸ‡­ ğŸ‡® ğŸ‡¯ ğŸ‡° ğŸ‡± ğŸ‡² ğŸ‡³ ğŸ‡´ ğŸ‡µ ğŸ‡¶ ğŸ‡· ğŸ‡¸ ğŸ‡¹ ğŸ‡º ğŸ‡» ğŸ‡¼ ğŸ‡½ ğŸ‡¾ ğŸ‡¿)

          MSG="ğŸ§© **Game Owners â€“ Will you be there next time?**\n\nReact with your emoji to confirm:\n\n"
          i=0
          while read -r OWNER; do
            MSG+="${EMOJIS[i]} ${OWNER}\n"
            i=$((i + 1))
          done < .owners.txt

          echo -e "$MSG" > .msg.txt
          MSG_CONTENT=$(jq -Rs . < .msg.txt | sed 's/\\\\n/\\n/g')

          RESPONSE=$(curl -s -X POST "https://discord.com/api/v10/channels/${{ secrets.DISCORD_OWNERS_CHANNEL_ID }}/messages" \
            -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"content\": $MSG_CONTENT}")

          MESSAGE_ID=$(echo "$RESPONSE" | jq -r '.id')

          i=0
          while read -r OWNER; do
            EMOJI="${EMOJIS[i]}"
            ENCODED=$(printf "%s" "$EMOJI" | jq -sRr @uri)
            curl -s -X PUT "https://discord.com/api/v10/channels/${{ secrets.DISCORD_OWNERS_CHANNEL_ID }}/messages/${MESSAGE_ID}/reactions/${ENCODED}/@me" \
              -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}"
            sleep 0.2
            i=$((i + 1))
          done < .owners.txt

      - name: Commit poll record
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .last_owners_poll
          git commit -m "ğŸ“Œ Record last owners poll date" || echo "No changes"
          git push
